/**
 */
package fr.obeo.dsl.projet.groupeidm.provider;

import fr.obeo.dsl.projet.groupeidm.util.GroupeidmAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class GroupeidmItemProviderAdapterFactory extends GroupeidmAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public GroupeidmItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.admin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected adminItemProvider adminItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.admin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createadminAdapter() {
		if (adminItemProvider == null) {
			adminItemProvider = new adminItemProvider(this);
		}

		return adminItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.auteur} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected auteurItemProvider auteurItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.auteur}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createauteurAdapter() {
		if (auteurItemProvider == null) {
			auteurItemProvider = new auteurItemProvider(this);
		}

		return auteurItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.membre} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected membreItemProvider membreItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.membre}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createmembreAdapter() {
		if (membreItemProvider == null) {
			membreItemProvider = new membreItemProvider(this);
		}

		return membreItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.fromation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected fromationItemProvider fromationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.fromation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createfromationAdapter() {
		if (fromationItemProvider == null) {
			fromationItemProvider = new fromationItemProvider(this);
		}

		return fromationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.tuteur} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected tuteurItemProvider tuteurItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.tuteur}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createtuteurAdapter() {
		if (tuteurItemProvider == null) {
			tuteurItemProvider = new tuteurItemProvider(this);
		}

		return tuteurItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.forum} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected forumItemProvider forumItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.forum}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createforumAdapter() {
		if (forumItemProvider == null) {
			forumItemProvider = new forumItemProvider(this);
		}

		return forumItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.chat} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected chatItemProvider chatItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.chat}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createchatAdapter() {
		if (chatItemProvider == null) {
			chatItemProvider = new chatItemProvider(this);
		}

		return chatItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.mail} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected mailItemProvider mailItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.mail}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createmailAdapter() {
		if (mailItemProvider == null) {
			mailItemProvider = new mailItemProvider(this);
		}

		return mailItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.repository} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected repositoryItemProvider repositoryItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.repository}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createrepositoryAdapter() {
		if (repositoryItemProvider == null) {
			repositoryItemProvider = new repositoryItemProvider(this);
		}

		return repositoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.chapitre} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected chapitreItemProvider chapitreItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.chapitre}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createchapitreAdapter() {
		if (chapitreItemProvider == null) {
			chapitreItemProvider = new chapitreItemProvider(this);
		}

		return chapitreItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.module} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected moduleItemProvider moduleItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.module}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createmoduleAdapter() {
		if (moduleItemProvider == null) {
			moduleItemProvider = new moduleItemProvider(this);
		}

		return moduleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.page} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected pageItemProvider pageItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.page}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createpageAdapter() {
		if (pageItemProvider == null) {
			pageItemProvider = new pageItemProvider(this);
		}

		return pageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.tracking} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected trackingItemProvider trackingItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.tracking}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createtrackingAdapter() {
		if (trackingItemProvider == null) {
			trackingItemProvider = new trackingItemProvider(this);
		}

		return trackingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.etudiant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected etudiantItemProvider etudiantItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.etudiant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createetudiantAdapter() {
		if (etudiantItemProvider == null) {
			etudiantItemProvider = new etudiantItemProvider(this);
		}

		return etudiantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.connecte} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected connecteItemProvider connecteItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.connecte}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createconnecteAdapter() {
		if (connecteItemProvider == null) {
			connecteItemProvider = new connecteItemProvider(this);
		}

		return connecteItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.obeo.dsl.projet.groupeidm.profil} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected profilItemProvider profilItemProvider;

	/**
	 * This creates an adapter for a {@link fr.obeo.dsl.projet.groupeidm.profil}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createprofilAdapter() {
		if (profilItemProvider == null) {
			profilItemProvider = new profilItemProvider(this);
		}

		return profilItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (adminItemProvider != null)
			adminItemProvider.dispose();
		if (auteurItemProvider != null)
			auteurItemProvider.dispose();
		if (membreItemProvider != null)
			membreItemProvider.dispose();
		if (fromationItemProvider != null)
			fromationItemProvider.dispose();
		if (tuteurItemProvider != null)
			tuteurItemProvider.dispose();
		if (forumItemProvider != null)
			forumItemProvider.dispose();
		if (chatItemProvider != null)
			chatItemProvider.dispose();
		if (mailItemProvider != null)
			mailItemProvider.dispose();
		if (repositoryItemProvider != null)
			repositoryItemProvider.dispose();
		if (chapitreItemProvider != null)
			chapitreItemProvider.dispose();
		if (moduleItemProvider != null)
			moduleItemProvider.dispose();
		if (pageItemProvider != null)
			pageItemProvider.dispose();
		if (trackingItemProvider != null)
			trackingItemProvider.dispose();
		if (etudiantItemProvider != null)
			etudiantItemProvider.dispose();
		if (connecteItemProvider != null)
			connecteItemProvider.dispose();
		if (profilItemProvider != null)
			profilItemProvider.dispose();
	}

}
